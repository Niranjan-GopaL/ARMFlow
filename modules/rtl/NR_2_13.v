/* Generated by Yosys 0.45+139 (git sha1 8e1e2b9a3, g++ 12.2.0-14 -fPIC -O3) */

module NR_2_13(IN1, IN2, Out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  input [1:0] IN1;
  wire [1:0] IN1;
  input [12:0] IN2;
  wire [12:0] IN2;
  output [14:0] Out;
  wire [14:0] Out;
  AND _075_ (
    .A(IN1[1]),
    .B(IN2[8]),
    .Y(_009_)
  );
  AND _076_ (
    .A(IN1[0]),
    .B(IN2[9]),
    .Y(_010_)
  );
  NAND _077_ (
    .A(IN1[0]),
    .B(IN2[8]),
    .Y(_011_)
  );
  NAND _078_ (
    .A(IN1[1]),
    .B(IN2[9]),
    .Y(_012_)
  );
  NAND _079_ (
    .A(_009_),
    .B(_010_),
    .Y(_013_)
  );
  XOR _080_ (
    .A(_009_),
    .B(_010_),
    .Y(_014_)
  );
  NAND _081_ (
    .A(IN1[1]),
    .B(IN2[7]),
    .Y(_015_)
  );
  NAND _082_ (
    .A(_011_),
    .B(_015_),
    .Y(_016_)
  );
  AND _083_ (
    .A(IN1[0]),
    .B(IN2[7]),
    .Y(_017_)
  );
  OR _084_ (
    .A(_011_),
    .B(_015_),
    .Y(_018_)
  );
  AND _085_ (
    .A(IN1[1]),
    .B(IN2[6]),
    .Y(_019_)
  );
  AND _086_ (
    .A(IN1[0]),
    .B(IN2[6]),
    .Y(_020_)
  );
  NAND _087_ (
    .A(_017_),
    .B(_019_),
    .Y(_021_)
  );
  XOR _088_ (
    .A(_017_),
    .B(_019_),
    .Y(_022_)
  );
  AND _089_ (
    .A(IN1[1]),
    .B(IN2[5]),
    .Y(_023_)
  );
  AND _090_ (
    .A(IN1[0]),
    .B(IN2[5]),
    .Y(_024_)
  );
  NAND _091_ (
    .A(_020_),
    .B(_023_),
    .Y(_025_)
  );
  XOR _092_ (
    .A(_020_),
    .B(_023_),
    .Y(_026_)
  );
  AND _093_ (
    .A(IN1[1]),
    .B(IN2[4]),
    .Y(_027_)
  );
  AND _094_ (
    .A(IN1[0]),
    .B(IN2[4]),
    .Y(_028_)
  );
  NAND _095_ (
    .A(_024_),
    .B(_027_),
    .Y(_029_)
  );
  AND _096_ (
    .A(IN1[1]),
    .B(IN2[3]),
    .Y(_030_)
  );
  AND _097_ (
    .A(IN1[0]),
    .B(IN2[3]),
    .Y(_031_)
  );
  NAND _098_ (
    .A(_028_),
    .B(_030_),
    .Y(_032_)
  );
  XOR _099_ (
    .A(_028_),
    .B(_030_),
    .Y(_033_)
  );
  AND _100_ (
    .A(IN1[1]),
    .B(IN2[2]),
    .Y(_034_)
  );
  AND _101_ (
    .A(IN1[0]),
    .B(IN2[2]),
    .Y(_035_)
  );
  NAND _102_ (
    .A(_031_),
    .B(_034_),
    .Y(_036_)
  );
  AND _103_ (
    .A(IN2[1]),
    .B(IN1[1]),
    .Y(_037_)
  );
  NAND _104_ (
    .A(IN1[0]),
    .B(IN2[1]),
    .Y(_038_)
  );
  NAND _105_ (
    .A(_035_),
    .B(_037_),
    .Y(_039_)
  );
  AND _106_ (
    .A(IN2[0]),
    .B(IN1[1]),
    .Y(_040_)
  );
  AND _107_ (
    .A(IN1[0]),
    .B(IN2[0]),
    .Y(Out[0])
  );
  AND _108_ (
    .A(_037_),
    .B(Out[0]),
    .Y(_041_)
  );
  XOR _109_ (
    .A(_035_),
    .B(_037_),
    .Y(_042_)
  );
  NAND _110_ (
    .A(_041_),
    .B(_042_),
    .Y(_043_)
  );
  NAND _111_ (
    .A(_039_),
    .B(_043_),
    .Y(_044_)
  );
  XOR _112_ (
    .A(_031_),
    .B(_034_),
    .Y(_045_)
  );
  NAND _113_ (
    .A(_044_),
    .B(_045_),
    .Y(_046_)
  );
  NAND _114_ (
    .A(_036_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _115_ (
    .A(_033_),
    .B(_047_),
    .Y(_048_)
  );
  NAND _116_ (
    .A(_032_),
    .B(_048_),
    .Y(_049_)
  );
  XOR _117_ (
    .A(_024_),
    .B(_027_),
    .Y(_050_)
  );
  NAND _118_ (
    .A(_049_),
    .B(_050_),
    .Y(_051_)
  );
  NAND _119_ (
    .A(_029_),
    .B(_051_),
    .Y(_052_)
  );
  NAND _120_ (
    .A(_026_),
    .B(_052_),
    .Y(_053_)
  );
  NAND _121_ (
    .A(_025_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _122_ (
    .A(_022_),
    .B(_054_),
    .Y(_055_)
  );
  AND _123_ (
    .A(_021_),
    .B(_055_),
    .Y(_056_)
  );
  NAND _124_ (
    .A(_018_),
    .B(_056_),
    .Y(_057_)
  );
  AND _125_ (
    .A(_016_),
    .B(_057_),
    .Y(_058_)
  );
  NAND _126_ (
    .A(_014_),
    .B(_058_),
    .Y(_059_)
  );
  AND _127_ (
    .A(_013_),
    .B(_059_),
    .Y(_060_)
  );
  NAND _128_ (
    .A(IN1[0]),
    .B(IN2[10]),
    .Y(_061_)
  );
  AND _129_ (
    .A(IN1[1]),
    .B(IN2[10]),
    .Y(_062_)
  );
  OR _130_ (
    .A(_012_),
    .B(_061_),
    .Y(_063_)
  );
  NAND _131_ (
    .A(_012_),
    .B(_061_),
    .Y(_064_)
  );
  XOR _132_ (
    .A(_012_),
    .B(_061_),
    .Y(_065_)
  );
  XNOR _133_ (
    .A(_060_),
    .B(_065_),
    .Y(Out[10])
  );
  AND _134_ (
    .A(IN1[0]),
    .B(IN2[11]),
    .Y(_066_)
  );
  NAND _135_ (
    .A(IN1[1]),
    .B(IN2[11]),
    .Y(_067_)
  );
  NAND _136_ (
    .A(_062_),
    .B(_066_),
    .Y(_068_)
  );
  XOR _137_ (
    .A(_062_),
    .B(_066_),
    .Y(_069_)
  );
  AND _138_ (
    .A(_013_),
    .B(_063_),
    .Y(_070_)
  );
  NAND _139_ (
    .A(_059_),
    .B(_070_),
    .Y(_071_)
  );
  AND _140_ (
    .A(_064_),
    .B(_071_),
    .Y(_072_)
  );
  NAND _141_ (
    .A(_069_),
    .B(_072_),
    .Y(_073_)
  );
  XOR _142_ (
    .A(_069_),
    .B(_072_),
    .Y(Out[11])
  );
  AND _143_ (
    .A(_068_),
    .B(_073_),
    .Y(_074_)
  );
  NAND _144_ (
    .A(IN1[0]),
    .B(IN2[12]),
    .Y(_000_)
  );
  NAND _145_ (
    .A(_067_),
    .B(_000_),
    .Y(_001_)
  );
  AND _146_ (
    .A(IN1[1]),
    .B(IN2[12]),
    .Y(_002_)
  );
  NAND _147_ (
    .A(_066_),
    .B(_002_),
    .Y(_003_)
  );
  XOR _148_ (
    .A(_067_),
    .B(_000_),
    .Y(_004_)
  );
  XNOR _149_ (
    .A(_074_),
    .B(_004_),
    .Y(Out[12])
  );
  AND _150_ (
    .A(_068_),
    .B(_003_),
    .Y(_005_)
  );
  NAND _151_ (
    .A(_073_),
    .B(_005_),
    .Y(_006_)
  );
  AND _152_ (
    .A(_001_),
    .B(_006_),
    .Y(_007_)
  );
  AND _153_ (
    .A(_002_),
    .B(_007_),
    .Y(Out[14])
  );
  XOR _154_ (
    .A(_002_),
    .B(_007_),
    .Y(Out[13])
  );
  XOR _155_ (
    .A(_041_),
    .B(_042_),
    .Y(Out[2])
  );
  XOR _156_ (
    .A(_044_),
    .B(_045_),
    .Y(Out[3])
  );
  XOR _157_ (
    .A(_033_),
    .B(_047_),
    .Y(Out[4])
  );
  XOR _158_ (
    .A(_049_),
    .B(_050_),
    .Y(Out[5])
  );
  XOR _159_ (
    .A(_026_),
    .B(_052_),
    .Y(Out[6])
  );
  XOR _160_ (
    .A(_022_),
    .B(_054_),
    .Y(Out[7])
  );
  XOR _161_ (
    .A(_011_),
    .B(_015_),
    .Y(_008_)
  );
  XNOR _162_ (
    .A(_056_),
    .B(_008_),
    .Y(Out[8])
  );
  XOR _163_ (
    .A(_014_),
    .B(_058_),
    .Y(Out[9])
  );
  XNOR _164_ (
    .A(_038_),
    .B(_040_),
    .Y(Out[1])
  );
endmodule
