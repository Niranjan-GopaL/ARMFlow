/* Generated by Yosys 0.53+39 (git sha1 388955031, g++ 12.2.0-14 -fPIC -O3) */

module AndGate(a, b, y);
  input a;
  wire a;
  input b;
  wire b;
  output y;
  wire y;
  AND2x2_ASAP7_75t_R _0_ (
    .A(b),
    .B(a),
    .Y(y)
  );
endmodule

module BitwisePG(A, B, P, G);
  input A;
  wire A;
  input B;
  wire B;
  output G;
  wire G;
  output P;
  wire P;
  AND2x2_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(G)
  );
  XOR2xp5_ASAP7_75t_R _1_ (
    .A(B),
    .B(A),
    .Y(P)
  );
endmodule

module BlackCell(Pi, Gi, Cin, Pj, P, G);
  input Cin;
  wire Cin;
  output G;
  wire G;
  input Gi;
  wire Gi;
  output P;
  wire P;
  input Pi;
  wire Pi;
  input Pj;
  wire Pj;
  AO21x1_ASAP7_75t_R _0_ (
    .A1(Cin),
    .A2(Pi),
    .B(Gi),
    .Y(G)
  );
  AND2x2_ASAP7_75t_R _1_ (
    .A(Pi),
    .B(Pj),
    .Y(P)
  );
endmodule

module FullAdder(a, b, cin, sum, cout);
  wire _0_;
  wire _1_;
  input a;
  wire a;
  input b;
  wire b;
  input cin;
  wire cin;
  output cout;
  wire cout;
  output sum;
  wire sum;
  MAJx2_ASAP7_75t_R _2_ (
    .A(b),
    .B(a),
    .C(cin),
    .Y(cout)
  );
  NOR3xp33_ASAP7_75t_R _3_ (
    .A(b),
    .B(a),
    .C(cin),
    .Y(_0_)
  );
  NAND3xp33_ASAP7_75t_R _4_ (
    .A(b),
    .B(a),
    .C(cin),
    .Y(_1_)
  );
  OAI21xp33_ASAP7_75t_R _5_ (
    .A1(cout),
    .A2(_0_),
    .B(_1_),
    .Y(sum)
  );
endmodule

module GrayCell(Pi, Gi, Cin, P, G);
  input Cin;
  wire Cin;
  output G;
  wire G;
  input Gi;
  wire Gi;
  output P;
  wire P;
  input Pi;
  wire Pi;
  AO21x1_ASAP7_75t_R _0_ (
    .A1(Cin),
    .A2(Pi),
    .B(Gi),
    .Y(G)
  );
  assign P = Pi;
endmodule

module HalfAdder(a, b, sum, cout);
  input a;
  wire a;
  input b;
  wire b;
  output cout;
  wire cout;
  output sum;
  wire sum;
  AND2x2_ASAP7_75t_R _0_ (
    .A(b),
    .B(a),
    .Y(cout)
  );
  XOR2xp5_ASAP7_75t_R _1_ (
    .A(b),
    .B(a),
    .Y(sum)
  );
endmodule

module NR_16_3(A, B, Product);
  input [15:0] A;
  wire [15:0] A;
  input [2:0] B;
  wire [2:0] B;
  wire P_0_0;
  wire P_0_1;
  wire P_0_10;
  wire P_0_11;
  wire P_0_12;
  wire P_0_13;
  wire P_0_14;
  wire P_0_15;
  wire P_0_2;
  wire P_0_3;
  wire P_0_4;
  wire P_0_5;
  wire P_0_6;
  wire P_0_7;
  wire P_0_8;
  wire P_0_9;
  wire P_1_0;
  wire P_1_1;
  wire P_1_10;
  wire P_1_11;
  wire P_1_12;
  wire P_1_13;
  wire P_1_14;
  wire P_1_15;
  wire P_1_2;
  wire P_1_3;
  wire P_1_4;
  wire P_1_5;
  wire P_1_6;
  wire P_1_7;
  wire P_1_8;
  wire P_1_9;
  wire P_2_0;
  wire P_2_1;
  wire P_2_10;
  wire P_2_11;
  wire P_2_12;
  wire P_2_13;
  wire P_2_14;
  wire P_2_15;
  wire P_2_2;
  wire P_2_3;
  wire P_2_4;
  wire P_2_5;
  wire P_2_6;
  wire P_2_7;
  wire P_2_8;
  wire P_2_9;
  output [18:0] Product;
  wire [18:0] Product;
  wire c0;
  wire c1;
  wire c10;
  wire c11;
  wire c12;
  wire c13;
  wire c14;
  wire c2;
  wire c3;
  wire c4;
  wire c5;
  wire c6;
  wire c7;
  wire c8;
  wire c9;
  wire s0;
  wire s1;
  wire s10;
  wire s11;
  wire s12;
  wire s13;
  wire s14;
  wire s2;
  wire s3;
  wire s4;
  wire s5;
  wire s6;
  wire s7;
  wire s8;
  wire s9;
  AndGate uut0 (
    .a(A[0]),
    .b(B[0]),
    .y(P_0_0)
  );
  AndGate uut1 (
    .a(A[1]),
    .b(B[0]),
    .y(P_0_1)
  );
  AndGate uut10 (
    .a(A[10]),
    .b(B[0]),
    .y(P_0_10)
  );
  AndGate uut11 (
    .a(A[11]),
    .b(B[0]),
    .y(P_0_11)
  );
  AndGate uut12 (
    .a(A[12]),
    .b(B[0]),
    .y(P_0_12)
  );
  AndGate uut13 (
    .a(A[13]),
    .b(B[0]),
    .y(P_0_13)
  );
  AndGate uut14 (
    .a(A[14]),
    .b(B[0]),
    .y(P_0_14)
  );
  AndGate uut15 (
    .a(A[15]),
    .b(B[0]),
    .y(P_0_15)
  );
  AndGate uut16 (
    .a(A[0]),
    .b(B[1]),
    .y(P_1_0)
  );
  AndGate uut17 (
    .a(A[1]),
    .b(B[1]),
    .y(P_1_1)
  );
  AndGate uut18 (
    .a(A[2]),
    .b(B[1]),
    .y(P_1_2)
  );
  AndGate uut19 (
    .a(A[3]),
    .b(B[1]),
    .y(P_1_3)
  );
  AndGate uut2 (
    .a(A[2]),
    .b(B[0]),
    .y(P_0_2)
  );
  AndGate uut20 (
    .a(A[4]),
    .b(B[1]),
    .y(P_1_4)
  );
  AndGate uut21 (
    .a(A[5]),
    .b(B[1]),
    .y(P_1_5)
  );
  AndGate uut22 (
    .a(A[6]),
    .b(B[1]),
    .y(P_1_6)
  );
  AndGate uut23 (
    .a(A[7]),
    .b(B[1]),
    .y(P_1_7)
  );
  AndGate uut24 (
    .a(A[8]),
    .b(B[1]),
    .y(P_1_8)
  );
  AndGate uut25 (
    .a(A[9]),
    .b(B[1]),
    .y(P_1_9)
  );
  AndGate uut26 (
    .a(A[10]),
    .b(B[1]),
    .y(P_1_10)
  );
  AndGate uut27 (
    .a(A[11]),
    .b(B[1]),
    .y(P_1_11)
  );
  AndGate uut28 (
    .a(A[12]),
    .b(B[1]),
    .y(P_1_12)
  );
  AndGate uut29 (
    .a(A[13]),
    .b(B[1]),
    .y(P_1_13)
  );
  AndGate uut3 (
    .a(A[3]),
    .b(B[0]),
    .y(P_0_3)
  );
  AndGate uut30 (
    .a(A[14]),
    .b(B[1]),
    .y(P_1_14)
  );
  AndGate uut31 (
    .a(A[15]),
    .b(B[1]),
    .y(P_1_15)
  );
  AndGate uut32 (
    .a(A[0]),
    .b(B[2]),
    .y(P_2_0)
  );
  AndGate uut33 (
    .a(A[1]),
    .b(B[2]),
    .y(P_2_1)
  );
  AndGate uut34 (
    .a(A[2]),
    .b(B[2]),
    .y(P_2_2)
  );
  AndGate uut35 (
    .a(A[3]),
    .b(B[2]),
    .y(P_2_3)
  );
  AndGate uut36 (
    .a(A[4]),
    .b(B[2]),
    .y(P_2_4)
  );
  AndGate uut37 (
    .a(A[5]),
    .b(B[2]),
    .y(P_2_5)
  );
  AndGate uut38 (
    .a(A[6]),
    .b(B[2]),
    .y(P_2_6)
  );
  AndGate uut39 (
    .a(A[7]),
    .b(B[2]),
    .y(P_2_7)
  );
  AndGate uut4 (
    .a(A[4]),
    .b(B[0]),
    .y(P_0_4)
  );
  AndGate uut40 (
    .a(A[8]),
    .b(B[2]),
    .y(P_2_8)
  );
  AndGate uut41 (
    .a(A[9]),
    .b(B[2]),
    .y(P_2_9)
  );
  AndGate uut42 (
    .a(A[10]),
    .b(B[2]),
    .y(P_2_10)
  );
  AndGate uut43 (
    .a(A[11]),
    .b(B[2]),
    .y(P_2_11)
  );
  AndGate uut44 (
    .a(A[12]),
    .b(B[2]),
    .y(P_2_12)
  );
  AndGate uut45 (
    .a(A[13]),
    .b(B[2]),
    .y(P_2_13)
  );
  AndGate uut46 (
    .a(A[14]),
    .b(B[2]),
    .y(P_2_14)
  );
  AndGate uut47 (
    .a(A[15]),
    .b(B[2]),
    .y(P_2_15)
  );
  HalfAdder uut48 (
    .a(P_0_2),
    .b(P_1_1),
    .cout(c0),
    .sum(s0)
  );
  FullAdder uut49 (
    .a(P_0_3),
    .b(P_1_2),
    .cin(P_2_1),
    .cout(c1),
    .sum(s1)
  );
  AndGate uut5 (
    .a(A[5]),
    .b(B[0]),
    .y(P_0_5)
  );
  FullAdder uut50 (
    .a(P_0_4),
    .b(P_1_3),
    .cin(P_2_2),
    .cout(c2),
    .sum(s2)
  );
  FullAdder uut51 (
    .a(P_0_5),
    .b(P_1_4),
    .cin(P_2_3),
    .cout(c3),
    .sum(s3)
  );
  FullAdder uut52 (
    .a(P_0_6),
    .b(P_1_5),
    .cin(P_2_4),
    .cout(c4),
    .sum(s4)
  );
  FullAdder uut53 (
    .a(P_0_7),
    .b(P_1_6),
    .cin(P_2_5),
    .cout(c5),
    .sum(s5)
  );
  FullAdder uut54 (
    .a(P_0_8),
    .b(P_1_7),
    .cin(P_2_6),
    .cout(c6),
    .sum(s6)
  );
  FullAdder uut55 (
    .a(P_0_9),
    .b(P_1_8),
    .cin(P_2_7),
    .cout(c7),
    .sum(s7)
  );
  FullAdder uut56 (
    .a(P_0_10),
    .b(P_1_9),
    .cin(P_2_8),
    .cout(c8),
    .sum(s8)
  );
  FullAdder uut57 (
    .a(P_0_11),
    .b(P_1_10),
    .cin(P_2_9),
    .cout(c9),
    .sum(s9)
  );
  FullAdder uut58 (
    .a(P_0_12),
    .b(P_1_11),
    .cin(P_2_10),
    .cout(c10),
    .sum(s10)
  );
  FullAdder uut59 (
    .a(P_0_13),
    .b(P_1_12),
    .cin(P_2_11),
    .cout(c11),
    .sum(s11)
  );
  AndGate uut6 (
    .a(A[6]),
    .b(B[0]),
    .y(P_0_6)
  );
  FullAdder uut60 (
    .a(P_0_14),
    .b(P_1_13),
    .cin(P_2_12),
    .cout(c12),
    .sum(s12)
  );
  FullAdder uut61 (
    .a(P_0_15),
    .b(P_1_14),
    .cin(P_2_13),
    .cout(c13),
    .sum(s13)
  );
  HalfAdder uut62 (
    .a(P_1_15),
    .b(P_2_14),
    .cout(c14),
    .sum(s14)
  );
  unsignedBrentKungAdder17bit uut63 (
    .A({ P_2_15, c13, c12, c11, c10, c9, c8, c7, c6, c5, c4, c3, c2, c1, c0, P_2_0, P_0_1 }),
    .B({ c14, s14, s13, s12, s11, s10, s9, s8, s7, s6, s5, s4, s3, s2, s1, s0, P_1_0 }),
    .Sum(Product[18:1])
  );
  AndGate uut7 (
    .a(A[7]),
    .b(B[0]),
    .y(P_0_7)
  );
  AndGate uut8 (
    .a(A[8]),
    .b(B[0]),
    .y(P_0_8)
  );
  AndGate uut9 (
    .a(A[9]),
    .b(B[0]),
    .y(P_0_9)
  );
  assign Product[0] = P_0_0;
endmodule

module XorGate(A, B, Y);
  input A;
  wire A;
  input B;
  wire B;
  output Y;
  wire Y;
  XOR2xp5_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(Y)
  );
endmodule

module unsignedBrentKungAdder17bit(A, B, Sum);
  input [16:0] A;
  wire [16:0] A;
  input [16:0] B;
  wire [16:0] B;
  wire G_0_0;
  wire G_0_1;
  wire G_0_10;
  wire G_0_11;
  wire G_0_12;
  wire G_0_13;
  wire G_0_14;
  wire G_0_15;
  wire G_0_16;
  wire G_0_2;
  wire G_0_3;
  wire G_0_4;
  wire G_0_5;
  wire G_0_6;
  wire G_0_7;
  wire G_0_8;
  wire G_0_9;
  wire G_1_1;
  wire G_1_11;
  wire G_1_13;
  wire G_1_15;
  wire G_1_3;
  wire G_1_5;
  wire G_1_7;
  wire G_1_9;
  wire G_2_11;
  wire G_2_15;
  wire G_2_3;
  wire G_2_7;
  wire G_3_15;
  wire G_3_7;
  wire G_4_15;
  wire G_7_11;
  wire G_8_13;
  wire G_8_5;
  wire G_8_9;
  wire G_9_10;
  wire G_9_12;
  wire G_9_14;
  wire G_9_16;
  wire G_9_2;
  wire G_9_4;
  wire G_9_6;
  wire G_9_8;
  wire P_0_0;
  wire P_0_1;
  wire P_0_10;
  wire P_0_11;
  wire P_0_12;
  wire P_0_13;
  wire P_0_14;
  wire P_0_15;
  wire P_0_16;
  wire P_0_2;
  wire P_0_3;
  wire P_0_4;
  wire P_0_5;
  wire P_0_6;
  wire P_0_7;
  wire P_0_8;
  wire P_0_9;
  wire P_1_1;
  wire P_1_11;
  wire P_1_13;
  wire P_1_15;
  wire P_1_3;
  wire P_1_5;
  wire P_1_7;
  wire P_1_9;
  wire P_2_11;
  wire P_2_15;
  wire P_2_3;
  wire P_2_7;
  wire P_3_15;
  wire P_3_7;
  wire P_4_15;
  wire P_7_11;
  wire P_8_13;
  wire P_8_5;
  wire P_8_9;
  wire P_9_10;
  wire P_9_12;
  wire P_9_14;
  wire P_9_16;
  wire P_9_2;
  wire P_9_4;
  wire P_9_6;
  wire P_9_8;
  output [17:0] Sum;
  wire [17:0] Sum;
  BitwisePG uut0 (
    .A(A[0]),
    .B(B[0]),
    .G(G_0_0),
    .P(P_0_0)
  );
  BitwisePG uut1 (
    .A(A[1]),
    .B(B[1]),
    .G(G_0_1),
    .P(P_0_1)
  );
  BitwisePG uut10 (
    .A(A[10]),
    .B(B[10]),
    .G(G_0_10),
    .P(P_0_10)
  );
  BitwisePG uut11 (
    .A(A[11]),
    .B(B[11]),
    .G(G_0_11),
    .P(P_0_11)
  );
  BitwisePG uut12 (
    .A(A[12]),
    .B(B[12]),
    .G(G_0_12),
    .P(P_0_12)
  );
  BitwisePG uut13 (
    .A(A[13]),
    .B(B[13]),
    .G(G_0_13),
    .P(P_0_13)
  );
  BitwisePG uut14 (
    .A(A[14]),
    .B(B[14]),
    .G(G_0_14),
    .P(P_0_14)
  );
  BitwisePG uut15 (
    .A(A[15]),
    .B(B[15]),
    .G(G_0_15),
    .P(P_0_15)
  );
  BitwisePG uut16 (
    .A(A[16]),
    .B(B[16]),
    .G(G_0_16),
    .P(P_0_16)
  );
  GrayCell uut17 (
    .Cin(G_0_0),
    .G(G_1_1),
    .Gi(G_0_1),
    .P(P_1_1),
    .Pi(P_0_1)
  );
  BlackCell uut18 (
    .Cin(G_0_2),
    .G(G_1_3),
    .Gi(G_0_3),
    .P(P_1_3),
    .Pi(P_0_3),
    .Pj(P_0_2)
  );
  BlackCell uut19 (
    .Cin(G_0_4),
    .G(G_1_5),
    .Gi(G_0_5),
    .P(P_1_5),
    .Pi(P_0_5),
    .Pj(P_0_4)
  );
  BitwisePG uut2 (
    .A(A[2]),
    .B(B[2]),
    .G(G_0_2),
    .P(P_0_2)
  );
  BlackCell uut20 (
    .Cin(G_0_6),
    .G(G_1_7),
    .Gi(G_0_7),
    .P(P_1_7),
    .Pi(P_0_7),
    .Pj(P_0_6)
  );
  BlackCell uut21 (
    .Cin(G_0_8),
    .G(G_1_9),
    .Gi(G_0_9),
    .P(P_1_9),
    .Pi(P_0_9),
    .Pj(P_0_8)
  );
  BlackCell uut22 (
    .Cin(G_0_10),
    .G(G_1_11),
    .Gi(G_0_11),
    .P(P_1_11),
    .Pi(P_0_11),
    .Pj(P_0_10)
  );
  BlackCell uut23 (
    .Cin(G_0_12),
    .G(G_1_13),
    .Gi(G_0_13),
    .P(P_1_13),
    .Pi(P_0_13),
    .Pj(P_0_12)
  );
  BlackCell uut24 (
    .Cin(G_0_14),
    .G(G_1_15),
    .Gi(G_0_15),
    .P(P_1_15),
    .Pi(P_0_15),
    .Pj(P_0_14)
  );
  GrayCell uut25 (
    .Cin(G_1_1),
    .G(G_2_3),
    .Gi(G_1_3),
    .P(P_2_3),
    .Pi(P_1_3)
  );
  BlackCell uut26 (
    .Cin(G_1_5),
    .G(G_2_7),
    .Gi(G_1_7),
    .P(P_2_7),
    .Pi(P_1_7),
    .Pj(P_1_5)
  );
  BlackCell uut27 (
    .Cin(G_1_9),
    .G(G_2_11),
    .Gi(G_1_11),
    .P(P_2_11),
    .Pi(P_1_11),
    .Pj(P_1_9)
  );
  BlackCell uut28 (
    .Cin(G_1_13),
    .G(G_2_15),
    .Gi(G_1_15),
    .P(P_2_15),
    .Pi(P_1_15),
    .Pj(P_1_13)
  );
  GrayCell uut29 (
    .Cin(G_2_3),
    .G(G_3_7),
    .Gi(G_2_7),
    .P(P_3_7),
    .Pi(P_2_7)
  );
  BitwisePG uut3 (
    .A(A[3]),
    .B(B[3]),
    .G(G_0_3),
    .P(P_0_3)
  );
  BlackCell uut30 (
    .Cin(G_2_11),
    .G(G_3_15),
    .Gi(G_2_15),
    .P(P_3_15),
    .Pi(P_2_15),
    .Pj(P_2_11)
  );
  GrayCell uut31 (
    .Cin(G_3_7),
    .G(G_4_15),
    .Gi(G_3_15),
    .P(P_4_15),
    .Pi(P_3_15)
  );
  GrayCell uut32 (
    .Cin(G_3_7),
    .G(G_7_11),
    .Gi(G_2_11),
    .P(P_7_11),
    .Pi(P_2_11)
  );
  GrayCell uut33 (
    .Cin(G_2_3),
    .G(G_8_5),
    .Gi(G_1_5),
    .P(P_8_5),
    .Pi(P_1_5)
  );
  GrayCell uut34 (
    .Cin(G_3_7),
    .G(G_8_9),
    .Gi(G_1_9),
    .P(P_8_9),
    .Pi(P_1_9)
  );
  GrayCell uut35 (
    .Cin(G_7_11),
    .G(G_8_13),
    .Gi(G_1_13),
    .P(P_8_13),
    .Pi(P_1_13)
  );
  GrayCell uut36 (
    .Cin(G_1_1),
    .G(G_9_2),
    .Gi(G_0_2),
    .P(P_9_2),
    .Pi(P_0_2)
  );
  GrayCell uut37 (
    .Cin(G_2_3),
    .G(G_9_4),
    .Gi(G_0_4),
    .P(P_9_4),
    .Pi(P_0_4)
  );
  GrayCell uut38 (
    .Cin(G_8_5),
    .G(G_9_6),
    .Gi(G_0_6),
    .P(P_9_6),
    .Pi(P_0_6)
  );
  GrayCell uut39 (
    .Cin(G_3_7),
    .G(G_9_8),
    .Gi(G_0_8),
    .P(P_9_8),
    .Pi(P_0_8)
  );
  BitwisePG uut4 (
    .A(A[4]),
    .B(B[4]),
    .G(G_0_4),
    .P(P_0_4)
  );
  GrayCell uut40 (
    .Cin(G_8_9),
    .G(G_9_10),
    .Gi(G_0_10),
    .P(P_9_10),
    .Pi(P_0_10)
  );
  GrayCell uut41 (
    .Cin(G_7_11),
    .G(G_9_12),
    .Gi(G_0_12),
    .P(P_9_12),
    .Pi(P_0_12)
  );
  GrayCell uut42 (
    .Cin(G_8_13),
    .G(G_9_14),
    .Gi(G_0_14),
    .P(P_9_14),
    .Pi(P_0_14)
  );
  GrayCell uut43 (
    .Cin(G_4_15),
    .G(G_9_16),
    .Gi(G_0_16),
    .P(P_9_16),
    .Pi(P_0_16)
  );
  XorGate uut44 (
    .A(P_0_1),
    .B(G_0_0),
    .Y(Sum[1])
  );
  XorGate uut45 (
    .A(P_0_2),
    .B(G_1_1),
    .Y(Sum[2])
  );
  XorGate uut46 (
    .A(P_0_3),
    .B(G_9_2),
    .Y(Sum[3])
  );
  XorGate uut47 (
    .A(P_0_4),
    .B(G_2_3),
    .Y(Sum[4])
  );
  XorGate uut48 (
    .A(P_0_5),
    .B(G_9_4),
    .Y(Sum[5])
  );
  XorGate uut49 (
    .A(P_0_6),
    .B(G_8_5),
    .Y(Sum[6])
  );
  BitwisePG uut5 (
    .A(A[5]),
    .B(B[5]),
    .G(G_0_5),
    .P(P_0_5)
  );
  XorGate uut50 (
    .A(P_0_7),
    .B(G_9_6),
    .Y(Sum[7])
  );
  XorGate uut51 (
    .A(P_0_8),
    .B(G_3_7),
    .Y(Sum[8])
  );
  XorGate uut52 (
    .A(P_0_9),
    .B(G_9_8),
    .Y(Sum[9])
  );
  XorGate uut53 (
    .A(P_0_10),
    .B(G_8_9),
    .Y(Sum[10])
  );
  XorGate uut54 (
    .A(P_0_11),
    .B(G_9_10),
    .Y(Sum[11])
  );
  XorGate uut55 (
    .A(P_0_12),
    .B(G_7_11),
    .Y(Sum[12])
  );
  XorGate uut56 (
    .A(P_0_13),
    .B(G_9_12),
    .Y(Sum[13])
  );
  XorGate uut57 (
    .A(P_0_14),
    .B(G_8_13),
    .Y(Sum[14])
  );
  XorGate uut58 (
    .A(P_0_15),
    .B(G_9_14),
    .Y(Sum[15])
  );
  XorGate uut59 (
    .A(P_0_16),
    .B(G_4_15),
    .Y(Sum[16])
  );
  BitwisePG uut6 (
    .A(A[6]),
    .B(B[6]),
    .G(G_0_6),
    .P(P_0_6)
  );
  BitwisePG uut7 (
    .A(A[7]),
    .B(B[7]),
    .G(G_0_7),
    .P(P_0_7)
  );
  BitwisePG uut8 (
    .A(A[8]),
    .B(B[8]),
    .G(G_0_8),
    .P(P_0_8)
  );
  BitwisePG uut9 (
    .A(A[9]),
    .B(B[9]),
    .G(G_0_9),
    .P(P_0_9)
  );
  assign { Sum[17], Sum[0] } = { G_9_16, P_0_0 };
endmodule
