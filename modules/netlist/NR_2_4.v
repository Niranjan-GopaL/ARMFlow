/* Generated by Yosys 0.53+39 (git sha1 388955031, g++ 12.2.0-14 -fPIC -O3) */

module AndGate(a, b, y);
  input a;
  wire a;
  input b;
  wire b;
  output y;
  wire y;
  AND2x2_ASAP7_75t_R _0_ (
    .A(b),
    .B(a),
    .Y(y)
  );
endmodule

module BitwisePG(A, B, P, G);
  input A;
  wire A;
  input B;
  wire B;
  output G;
  wire G;
  output P;
  wire P;
  AND2x2_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(G)
  );
  XOR2xp5_ASAP7_75t_R _1_ (
    .A(B),
    .B(A),
    .Y(P)
  );
endmodule

module GrayCell(Pi, Gi, Cin, P, G);
  input Cin;
  wire Cin;
  output G;
  wire G;
  input Gi;
  wire Gi;
  output P;
  wire P;
  input Pi;
  wire Pi;
  AO21x1_ASAP7_75t_R _0_ (
    .A1(Cin),
    .A2(Pi),
    .B(Gi),
    .Y(G)
  );
  assign P = Pi;
endmodule

module NR_2_4(A, B, Product);
  input [1:0] A;
  wire [1:0] A;
  input [3:0] B;
  wire [3:0] B;
  wire P_0_0;
  wire P_0_1;
  wire P_1_0;
  wire P_1_1;
  wire P_2_0;
  wire P_2_1;
  wire P_3_0;
  wire P_3_1;
  output [5:0] Product;
  wire [5:0] Product;
  AndGate uut0 (
    .a(A[0]),
    .b(B[0]),
    .y(P_0_0)
  );
  AndGate uut1 (
    .a(A[1]),
    .b(B[0]),
    .y(P_0_1)
  );
  AndGate uut2 (
    .a(A[0]),
    .b(B[1]),
    .y(P_1_0)
  );
  AndGate uut3 (
    .a(A[1]),
    .b(B[1]),
    .y(P_1_1)
  );
  AndGate uut4 (
    .a(A[0]),
    .b(B[2]),
    .y(P_2_0)
  );
  AndGate uut5 (
    .a(A[1]),
    .b(B[2]),
    .y(P_2_1)
  );
  AndGate uut6 (
    .a(A[0]),
    .b(B[3]),
    .y(P_3_0)
  );
  AndGate uut7 (
    .a(A[1]),
    .b(B[3]),
    .y(P_3_1)
  );
  unsignedBrentKungAdder3bit uut8 (
    .A({ P_2_1, P_1_1, P_0_1 }),
    .B({ P_3_0, P_2_0, P_1_0 }),
    .Sum({ Product[5], Product[3:1] })
  );
  assign { Product[4], Product[0] } = { P_3_1, P_0_0 };
endmodule

module XorGate(A, B, Y);
  input A;
  wire A;
  input B;
  wire B;
  output Y;
  wire Y;
  XOR2xp5_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(Y)
  );
endmodule

module unsignedBrentKungAdder3bit(A, B, Sum);
  input [2:0] A;
  wire [2:0] A;
  input [2:0] B;
  wire [2:0] B;
  wire G_0_0;
  wire G_0_1;
  wire G_0_2;
  wire G_1_1;
  wire G_3_2;
  wire P_0_0;
  wire P_0_1;
  wire P_0_2;
  wire P_1_1;
  wire P_3_2;
  output [3:0] Sum;
  wire [3:0] Sum;
  BitwisePG uut0 (
    .A(A[0]),
    .B(B[0]),
    .G(G_0_0),
    .P(P_0_0)
  );
  BitwisePG uut1 (
    .A(A[1]),
    .B(B[1]),
    .G(G_0_1),
    .P(P_0_1)
  );
  BitwisePG uut2 (
    .A(A[2]),
    .B(B[2]),
    .G(G_0_2),
    .P(P_0_2)
  );
  GrayCell uut3 (
    .Cin(G_0_0),
    .G(G_1_1),
    .Gi(G_0_1),
    .P(P_1_1),
    .Pi(P_0_1)
  );
  GrayCell uut4 (
    .Cin(G_1_1),
    .G(G_3_2),
    .Gi(G_0_2),
    .P(P_3_2),
    .Pi(P_0_2)
  );
  XorGate uut5 (
    .A(P_0_1),
    .B(G_0_0),
    .Y(Sum[1])
  );
  XorGate uut6 (
    .A(P_0_2),
    .B(G_1_1),
    .Y(Sum[2])
  );
  assign { Sum[3], Sum[0] } = { G_3_2, P_0_0 };
endmodule
