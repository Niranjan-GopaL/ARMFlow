/* Generated by Yosys 0.53+39 (git sha1 388955031, g++ 12.2.0-14 -fPIC -O3) */

module AndGate(a, b, y);
  input a;
  wire a;
  input b;
  wire b;
  output y;
  wire y;
  AND2x2_ASAP7_75t_R _0_ (
    .A(b),
    .B(a),
    .Y(y)
  );
endmodule

module BitwisePG(A, B, P, G);
  input A;
  wire A;
  input B;
  wire B;
  output G;
  wire G;
  output P;
  wire P;
  AND2x2_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(G)
  );
  XOR2xp5_ASAP7_75t_R _1_ (
    .A(B),
    .B(A),
    .Y(P)
  );
endmodule

module BlackCell(Pi, Gi, Cin, Pj, P, G);
  input Cin;
  wire Cin;
  output G;
  wire G;
  input Gi;
  wire Gi;
  output P;
  wire P;
  input Pi;
  wire Pi;
  input Pj;
  wire Pj;
  AO21x1_ASAP7_75t_R _0_ (
    .A1(Cin),
    .A2(Pi),
    .B(Gi),
    .Y(G)
  );
  AND2x2_ASAP7_75t_R _1_ (
    .A(Pi),
    .B(Pj),
    .Y(P)
  );
endmodule

module GrayCell(Pi, Gi, Cin, P, G);
  input Cin;
  wire Cin;
  output G;
  wire G;
  input Gi;
  wire Gi;
  output P;
  wire P;
  input Pi;
  wire Pi;
  AO21x1_ASAP7_75t_R _0_ (
    .A1(Cin),
    .A2(Pi),
    .B(Gi),
    .Y(G)
  );
  assign P = Pi;
endmodule

module NR_11_2(A, B, Product);
  input [10:0] A;
  wire [10:0] A;
  input [1:0] B;
  wire [1:0] B;
  wire P_0_0;
  wire P_0_1;
  wire P_0_10;
  wire P_0_2;
  wire P_0_3;
  wire P_0_4;
  wire P_0_5;
  wire P_0_6;
  wire P_0_7;
  wire P_0_8;
  wire P_0_9;
  wire P_1_0;
  wire P_1_1;
  wire P_1_10;
  wire P_1_2;
  wire P_1_3;
  wire P_1_4;
  wire P_1_5;
  wire P_1_6;
  wire P_1_7;
  wire P_1_8;
  wire P_1_9;
  output [12:0] Product;
  wire [12:0] Product;
  AndGate uut0 (
    .a(A[0]),
    .b(B[0]),
    .y(P_0_0)
  );
  AndGate uut1 (
    .a(A[1]),
    .b(B[0]),
    .y(P_0_1)
  );
  AndGate uut10 (
    .a(A[10]),
    .b(B[0]),
    .y(P_0_10)
  );
  AndGate uut11 (
    .a(A[0]),
    .b(B[1]),
    .y(P_1_0)
  );
  AndGate uut12 (
    .a(A[1]),
    .b(B[1]),
    .y(P_1_1)
  );
  AndGate uut13 (
    .a(A[2]),
    .b(B[1]),
    .y(P_1_2)
  );
  AndGate uut14 (
    .a(A[3]),
    .b(B[1]),
    .y(P_1_3)
  );
  AndGate uut15 (
    .a(A[4]),
    .b(B[1]),
    .y(P_1_4)
  );
  AndGate uut16 (
    .a(A[5]),
    .b(B[1]),
    .y(P_1_5)
  );
  AndGate uut17 (
    .a(A[6]),
    .b(B[1]),
    .y(P_1_6)
  );
  AndGate uut18 (
    .a(A[7]),
    .b(B[1]),
    .y(P_1_7)
  );
  AndGate uut19 (
    .a(A[8]),
    .b(B[1]),
    .y(P_1_8)
  );
  AndGate uut2 (
    .a(A[2]),
    .b(B[0]),
    .y(P_0_2)
  );
  AndGate uut20 (
    .a(A[9]),
    .b(B[1]),
    .y(P_1_9)
  );
  AndGate uut21 (
    .a(A[10]),
    .b(B[1]),
    .y(P_1_10)
  );
  unsignedBrentKungAdder10bit uut22 (
    .A({ P_0_10, P_0_9, P_0_8, P_0_7, P_0_6, P_0_5, P_0_4, P_0_3, P_0_2, P_0_1 }),
    .B({ P_1_9, P_1_8, P_1_7, P_1_6, P_1_5, P_1_4, P_1_3, P_1_2, P_1_1, P_1_0 }),
    .Sum({ Product[12], Product[10:1] })
  );
  AndGate uut3 (
    .a(A[3]),
    .b(B[0]),
    .y(P_0_3)
  );
  AndGate uut4 (
    .a(A[4]),
    .b(B[0]),
    .y(P_0_4)
  );
  AndGate uut5 (
    .a(A[5]),
    .b(B[0]),
    .y(P_0_5)
  );
  AndGate uut6 (
    .a(A[6]),
    .b(B[0]),
    .y(P_0_6)
  );
  AndGate uut7 (
    .a(A[7]),
    .b(B[0]),
    .y(P_0_7)
  );
  AndGate uut8 (
    .a(A[8]),
    .b(B[0]),
    .y(P_0_8)
  );
  AndGate uut9 (
    .a(A[9]),
    .b(B[0]),
    .y(P_0_9)
  );
  assign { Product[11], Product[0] } = { P_1_10, P_0_0 };
endmodule

module XorGate(A, B, Y);
  input A;
  wire A;
  input B;
  wire B;
  output Y;
  wire Y;
  XOR2xp5_ASAP7_75t_R _0_ (
    .A(B),
    .B(A),
    .Y(Y)
  );
endmodule

module unsignedBrentKungAdder10bit(A, B, Sum);
  input [9:0] A;
  wire [9:0] A;
  input [9:0] B;
  wire [9:0] B;
  wire G_0_0;
  wire G_0_1;
  wire G_0_2;
  wire G_0_3;
  wire G_0_4;
  wire G_0_5;
  wire G_0_6;
  wire G_0_7;
  wire G_0_8;
  wire G_0_9;
  wire G_1_1;
  wire G_1_3;
  wire G_1_5;
  wire G_1_7;
  wire G_1_9;
  wire G_2_3;
  wire G_2_7;
  wire G_3_7;
  wire G_6_5;
  wire G_6_9;
  wire G_7_2;
  wire G_7_4;
  wire G_7_6;
  wire G_7_8;
  wire P_0_0;
  wire P_0_1;
  wire P_0_2;
  wire P_0_3;
  wire P_0_4;
  wire P_0_5;
  wire P_0_6;
  wire P_0_7;
  wire P_0_8;
  wire P_0_9;
  wire P_1_1;
  wire P_1_3;
  wire P_1_5;
  wire P_1_7;
  wire P_1_9;
  wire P_2_3;
  wire P_2_7;
  wire P_3_7;
  wire P_6_5;
  wire P_6_9;
  wire P_7_2;
  wire P_7_4;
  wire P_7_6;
  wire P_7_8;
  output [10:0] Sum;
  wire [10:0] Sum;
  BitwisePG uut0 (
    .A(A[0]),
    .B(B[0]),
    .G(G_0_0),
    .P(P_0_0)
  );
  BitwisePG uut1 (
    .A(A[1]),
    .B(B[1]),
    .G(G_0_1),
    .P(P_0_1)
  );
  GrayCell uut10 (
    .Cin(G_0_0),
    .G(G_1_1),
    .Gi(G_0_1),
    .P(P_1_1),
    .Pi(P_0_1)
  );
  BlackCell uut11 (
    .Cin(G_0_2),
    .G(G_1_3),
    .Gi(G_0_3),
    .P(P_1_3),
    .Pi(P_0_3),
    .Pj(P_0_2)
  );
  BlackCell uut12 (
    .Cin(G_0_4),
    .G(G_1_5),
    .Gi(G_0_5),
    .P(P_1_5),
    .Pi(P_0_5),
    .Pj(P_0_4)
  );
  BlackCell uut13 (
    .Cin(G_0_6),
    .G(G_1_7),
    .Gi(G_0_7),
    .P(P_1_7),
    .Pi(P_0_7),
    .Pj(P_0_6)
  );
  BlackCell uut14 (
    .Cin(G_0_8),
    .G(G_1_9),
    .Gi(G_0_9),
    .P(P_1_9),
    .Pi(P_0_9),
    .Pj(P_0_8)
  );
  GrayCell uut15 (
    .Cin(G_1_1),
    .G(G_2_3),
    .Gi(G_1_3),
    .P(P_2_3),
    .Pi(P_1_3)
  );
  BlackCell uut16 (
    .Cin(G_1_5),
    .G(G_2_7),
    .Gi(G_1_7),
    .P(P_2_7),
    .Pi(P_1_7),
    .Pj(P_1_5)
  );
  GrayCell uut17 (
    .Cin(G_2_3),
    .G(G_3_7),
    .Gi(G_2_7),
    .P(P_3_7),
    .Pi(P_2_7)
  );
  GrayCell uut18 (
    .Cin(G_2_3),
    .G(G_6_5),
    .Gi(G_1_5),
    .P(P_6_5),
    .Pi(P_1_5)
  );
  GrayCell uut19 (
    .Cin(G_3_7),
    .G(G_6_9),
    .Gi(G_1_9),
    .P(P_6_9),
    .Pi(P_1_9)
  );
  BitwisePG uut2 (
    .A(A[2]),
    .B(B[2]),
    .G(G_0_2),
    .P(P_0_2)
  );
  GrayCell uut20 (
    .Cin(G_1_1),
    .G(G_7_2),
    .Gi(G_0_2),
    .P(P_7_2),
    .Pi(P_0_2)
  );
  GrayCell uut21 (
    .Cin(G_2_3),
    .G(G_7_4),
    .Gi(G_0_4),
    .P(P_7_4),
    .Pi(P_0_4)
  );
  GrayCell uut22 (
    .Cin(G_6_5),
    .G(G_7_6),
    .Gi(G_0_6),
    .P(P_7_6),
    .Pi(P_0_6)
  );
  GrayCell uut23 (
    .Cin(G_3_7),
    .G(G_7_8),
    .Gi(G_0_8),
    .P(P_7_8),
    .Pi(P_0_8)
  );
  XorGate uut24 (
    .A(P_0_1),
    .B(G_0_0),
    .Y(Sum[1])
  );
  XorGate uut25 (
    .A(P_0_2),
    .B(G_1_1),
    .Y(Sum[2])
  );
  XorGate uut26 (
    .A(P_0_3),
    .B(G_7_2),
    .Y(Sum[3])
  );
  XorGate uut27 (
    .A(P_0_4),
    .B(G_2_3),
    .Y(Sum[4])
  );
  XorGate uut28 (
    .A(P_0_5),
    .B(G_7_4),
    .Y(Sum[5])
  );
  XorGate uut29 (
    .A(P_0_6),
    .B(G_6_5),
    .Y(Sum[6])
  );
  BitwisePG uut3 (
    .A(A[3]),
    .B(B[3]),
    .G(G_0_3),
    .P(P_0_3)
  );
  XorGate uut30 (
    .A(P_0_7),
    .B(G_7_6),
    .Y(Sum[7])
  );
  XorGate uut31 (
    .A(P_0_8),
    .B(G_3_7),
    .Y(Sum[8])
  );
  XorGate uut32 (
    .A(P_0_9),
    .B(G_7_8),
    .Y(Sum[9])
  );
  BitwisePG uut4 (
    .A(A[4]),
    .B(B[4]),
    .G(G_0_4),
    .P(P_0_4)
  );
  BitwisePG uut5 (
    .A(A[5]),
    .B(B[5]),
    .G(G_0_5),
    .P(P_0_5)
  );
  BitwisePG uut6 (
    .A(A[6]),
    .B(B[6]),
    .G(G_0_6),
    .P(P_0_6)
  );
  BitwisePG uut7 (
    .A(A[7]),
    .B(B[7]),
    .G(G_0_7),
    .P(P_0_7)
  );
  BitwisePG uut8 (
    .A(A[8]),
    .B(B[8]),
    .G(G_0_8),
    .P(P_0_8)
  );
  BitwisePG uut9 (
    .A(A[9]),
    .B(B[9]),
    .G(G_0_9),
    .P(P_0_9)
  );
  assign { Sum[10], Sum[0] } = { G_6_9, P_0_0 };
endmodule
